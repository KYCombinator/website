AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  ImageUri:
    Type: String
    Description: The URI of the container image
  DomainName:
    Type: String
    Default: www.kycombinator.com
    Description: Custom domain name for CloudFront
  CertificateArn:
    Type: String
    Description: The ARN of the ACM certificate
  HostedZoneId:
    Type: String
    Description: The hosted zone id

Resources:
  WebsiteFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri: !Ref ImageUri
      MemorySize: 2048
      Timeout: 60
      Events:
        RootPath:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: ANY
        AnyPath:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
      Environment:
        Variables:
          NODE_ENV: production
    Metadata:
      DockerTag: nodejs18
      DockerContext: .
      Dockerfile: Dockerfile

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: ServerlessAPI
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # CachingDisabled policy
          OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac  # AllViewerExceptHostHeader policy
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: all
          Compress: true
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - POST
            - PATCH
            - DELETE
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: true
            Headers:
              - Accept
              - Authorization
              - Referer
            Cookies:
              Forward: all
        Origins:
          - Id: ServerlessAPI
            DomainName: !Sub "${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com"
            OriginPath: '/Prod'
            CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
          - Id: S3Bucket
            DomainName: cdn.kycombinator.com.s3.us-east-1.amazonaws.com
            OriginPath: '/www'
            S3OriginConfig: {}
            OriginAccessControlId: !GetAtt S3OriginAccessControl.Id
        PriceClass: PriceClass_100
        HttpVersion: http2
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        CacheBehaviors:
          - PathPattern: "static/*"
            TargetOriginId: S3Bucket
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
          - PathPattern: "_next/*"
            TargetOriginId: S3Bucket
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
          - PathPattern: "*.jpg"
            TargetOriginId: S3Bucket
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
          - PathPattern: "*.png"
            TargetOriginId: S3Bucket
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
          - PathPattern: "*.svg"
            TargetOriginId: S3Bucket
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
          - PathPattern: "*.pdf"
            TargetOriginId: S3Bucket
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront's hosted zone ID
        EvaluateTargetHealth: false

  S3OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: S3OriginAccessControl
        Description: Access Control for S3 Bucket
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  
  CloudFrontDomain:
    Description: "CloudFront Distribution Domain Name"
    Value: !GetAtt CloudFrontDistribution.DomainName